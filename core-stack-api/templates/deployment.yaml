---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "orchestrate-api.fullname" . }}
  labels:
    {{- include "orchestrate-api.labels" . | nindent 4 }}
    app.metrics: {{ .Values.product }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "orchestrate-api.selectorLabels" . | nindent 6 }}
      app.metrics: {{ .Values.product }}
  template:
    metadata:
      labels:
        {{- include "orchestrate-api.selectorLabels" . | nindent 8 }}
        app.metrics: {{ .Values.product }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap-env.yaml") . | sha256sum }}
        checksum/secrets: {{ include (print $.Template.BasePath "/secret-env.yaml") . | sha256sum }}
        {{- if .Values.aws.enabled }}
          iam.amazonaws.com/role: "{{ .Values.aws.IamRoleArn }}"
        {{- end }}
        {{- if .Values.podAnnotations}}
          {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end}}
    spec:
      {{- if .Values.imageCredentials }}
      imagePullSecrets:
        - name: {{ include "orchestrate-api.imagePullSecretName" . }}
      {{- end }}
      serviceAccountName: {{ include "orchestrate-api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.initContainers }}
      initContainers:
        - name: {{ .Chart.Name }}-init
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /go/bin/main
          args:
            - {{ .Values.cmd.name }}
            - migrate
            - up
          envFrom:
            - configMapRef:
                name: {{ include "orchestrate-api.fullname" . }}-envmap
            - secretRef:
                name: {{ include "orchestrate-api.fullname" . }}-secretmap
                optional: true
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ include "orchestrate-api.fullname" . }}-envmap
            - secretRef:
                name: {{ include "orchestrate-api.fullname" . }}-secretmap
                optional: true
          command:
            - /go/bin/main
          args:
            - {{ .Values.cmd.name }}
            - run
          ports:
            - name: grpc-svc
              containerPort: 8080
              protocol: TCP
            - name: http-svc
              containerPort: 8081
              protocol: TCP
            - name: http-metrics
              containerPort: 8082
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /live
              port: http-metrics
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
